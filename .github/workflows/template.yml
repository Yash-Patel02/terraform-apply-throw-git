name: Terraform Manual Run

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select Environment'
        required: true
        default: dev
        type: choice
        options:
          - production
      environment_module:
        description: 'Select Environment Module'
        required: true
        default: dev
        type: choice
        options:
          - stage
          - prod
      module:
        description: 'Select Terraform Module'
        required: true
        default: frontend-service
        type: choice
        options:
          - artifact-registry
          - frontend-service
          - backend-service
          - storage
      command:
        description: 'Select Terraform Command'
        required: true
        default: plan
        type: choice
        options:
          - init
          - plan
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Setup GCP credentials
        env:
          GCP_CREDENTIALS_BASE64: ${{ secrets.GCP_CREDENTIALS_BASE64 }}
          GCP_PROJECT_ID: ${{ secrets.TF_VAR_PROJECT_ID }}
        run: |
          echo "${GCP_CREDENTIALS_BASE64}" | base64 --decode > "${HOME}/gcp-key.json"
          gcloud auth activate-service-account --key-file="${HOME}/gcp-key.json"
          gcloud config set project "$GCP_PROJECT_ID"

      - name: Export environment variables dynamically
        run: |
          MODULE=${{ github.event.inputs.module }}

          echo "ðŸ”§ Exporting environment variables for module: $MODULE"

          # Define module-specific variables
          if [ "$MODULE" = "frontend-service" ]; then
            echo "TF_VAR_FRONTEND_SERVICE=${{ secrets.TF_VAR_FRONTEND_SERVICE }}" >> $GITHUB_ENV
            echo "TF_VAR_FE_URL=${{ secrets.TF_VAR_FE_URL }}" >> $GITHUB_ENV
            echo "TF_VAR_BUCKET_NAME=${{ secrets.TF_VAR_BUCKET_NAME }}" >> $GITHUB_ENV
            echo "TF_VAR_PROJECT_ID=${{ secrets.TF_VAR_PROJECT_ID }}" >> $GITHUB_ENV
            
          elif [ "$MODULE" = "backend-service" ]; then
            echo "TF_VAR_BACKEND_SERVICE=${{ secrets.TF_VAR_BACKEND_SERVICE }}" >> $GITHUB_ENV
            echo "TF_VAR_DATABASE_URL=${{ secrets.TF_VAR_DATABASE_URL }}" >> $GITHUB_ENV
            echo "TF_VAR_DB_PASSWORD=${{ secrets.TF_VAR_DB_PASSWORD }}" >> $GITHUB_ENV
            echo "TF_VAR_REDIS_URL=${{ secrets.TF_VAR_REDIS_URL }}" >> $GITHUB_ENV
          elif [ "$MODULE" = "artifact-registry" ]; then
            echo "TF_VAR_REPOSITORY_ID=${{ secrets.TF_VAR_REPOSITORY_ID }}" >> $GITHUB_ENV
            echo "TF_VAR_REGION_CONTAINER_REPO=${{ secrets.TF_VAR_REGION_CONTAINER_REPO }}" >> $GITHUB_ENV
          elif [ "$MODULE" = "storage" ]; then
            echo "TF_VAR_BUCKET=${{ secrets.TF_VAR_BUCKET }}" >> $GITHUB_ENV
            echo "TF_VAR_REGION=${{ secrets.TF_VAR_REGION }}" >> $GITHUB_ENV
          fi

          # Common Terraform variables
          echo "TF_VAR_PROJECT_ID=${{ secrets.TF_VAR_PROJECT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_REGION=${{ secrets.TF_VAR_REGION }}" >> $GITHUB_ENV
          echo "TF_VAR_REGION_CLOUDRUN=${{ secrets.TF_VAR_REGION_CLOUDRUN }}" >> $GITHUB_ENV

      - name: Run selected Terraform command
        run: |
          ENV_DIR=${{ github.event.inputs.environment_module }}
          DIR=${{ github.event.inputs.module }}
          CMD=${{ github.event.inputs.command }}

          echo "ðŸš€ Running Terraform '$CMD' for module '$DIR' in environment '$ENV_DIR'"

          cd "infra/$ENV_DIR/$DIR"
          terraform init -input=false -upgrade
          terraform $CMD -input=false
          cd - >/dev/null
